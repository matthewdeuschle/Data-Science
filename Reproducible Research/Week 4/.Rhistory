1-pnorm(0.95, mean=0.9, sd=0.0212)
library(datasets)
data(mtcars)
?mtcars
tapply(mtcars$mpg, mtcars$cyl, mean)
names(mtcars)
tapply(mtcars$hp, mtcars$cyl, mean)
tapply( mtcars$cyl, mtcars$mpg, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
split(mtcars$mpg, mtcars$cyl)
split(mtcars$mpg, mtcars$cyl)
m = 12
sd = 4
z = qnorm(0.05)
mu = m-z * s / sqrt(100)
z = qnorm(0.05)
mu = m-z * sd / sqrt(100)
m1 = c(140,138, 150, 148, 135)
m2 = c(132,135,151,146,130)
p = t.test(m1, m2, paired=FALSE, alternative="two.sided")
p.value
p = t.test(m1, m2, paired=FALSE, alternative="two.sided")$p.value
p = t.test(m1, m2, paired=FALSE, alternative="two.sided", var.equal=FALSE)$p.value
p = t.test(m1, m2, paired=TRUE, alternative="two.sided", var.equal=FALSE)$p.value
se = sd/sqrt(9)
m + z * se
m - z * se
m + (z * se)
m - (z * se)
m + (1.96 * se)
m - (1.96 * se)
n = 100
sd = 3
m = 1.1
z = qnorm(0.05)
se = sd/sqrt(n)
m + (z * se)
n = 9
s = 30
a = 1100
error = qt(0.975, df=n-1)*s/sqrt(n)
left = a - error
right = a + error
n = 100
s = 1.1
a = 3
error = qt(0.975, df=n-1)*s/sqrt(n)
left = a - error
right = a + error
n = 9
s = 30
a = 1100
left = a - error
error = qt(0.975, df=n-1)*s/sqrt(n)
right = a + error
n = 100
s = 1.1
a = 3
error = qt(0.975, df=n-1)*s/sqrt(n)
left = a - error
right = a + error
n = 9
s = 30
a = 1100
error = qt(0.975, df=n-1)*s/sqrt(n)
a - error
a + error
pbinom(2, prob = .5, size = 4, lower.tail = FALSE)
ppois(1787- 1, lambda = 100 * 10, lower.tail = FALSE)
pnorm(100 + qnorm(.95) * .04, mean = 0.01, sd = .04, lower.tail = FALSE)
pnorm(100 + qnorm(.95) * .04, mean = 0.01, sd = .04, lower.tail = TRUE)
qnorm(100 + qnorm(.95) * .04, mean = 0.01, sd = .04, lower.tail = FALSE)
pnorm(100 + qnorm(.95) * .04, mean = 0.01, sd = .04, lower.tail = TRUE)
qt(100 + qnorm(.95) * .04, mean = 0.01, sd = .04, lower.tail = TRUE)
(qnorm(.95) + qnorm(.9)) ^ 2 * .04 ^ 2 / .01^2
fname = "repdata-data-StormData.csv.bz2"
con = bzfile(fname)
data = read.csv(con)
unlink(con)
library(plyr)
library(ggplot2)
library(gridExtra)
setwd("F:/My Development/My Testing Ground/Data Science/Data Science Cert - Code/Reproducible Research/Week 4")
fname = "repdata-data-StormData.csv.bz2"
con = bzfile(fname)
data = read.csv(con)
unlink(con)
dataVars = data[ ,c("EVTYPE","FATALITIES","INJURIES","CROPDMG",
"CROPDMGEXP","PROPDMG","PROPDMGEXP")]
rm(data)
dataVars$PROPDMGEXP
levels(dataVars$PROPDMGEXP)<- c(1,1,1,1,1,10,100,1000,10000,
1000000,1000000,10000000,
100000000,1000000000,100,100,
1000,1000000,1000000)
dataVars$PROPDMGEXP
dataVars$CROPDMGEXP
levels(dataVars$CROPDMGEXP)<- c(1,1,1,100,1000000000,1000,1000,
1000000,1000000)
dataVars$CROPDMGEXP
str(dataVars$CROPDMGEXP)
dataVars$PROPDMGEXP <- as.numeric(as.character(dataVars$PROPDMGEXP))
dataVars$CROPDMGEXP <- as.numeric(as.character(dataVars$CROPDMGEXP))
str(dataVars$PROPDMGEXP)
dataVars$PROPDMGEXP <- as.numeric(as.character(dataVars$PROPDMGEXP))
dataVars$CROPDMGEXP <- as.numeric(as.character(dataVars$CROPDMGEXP))
dataFinal <- dataVars[ ,c("EVTYPE","FATALITIES","INJURIES")]
dataFinal <- dataVars[ ,c("EVTYPE","FATALITIES","INJURIES")]
dataFinal$FATALITIES.INJURIES <- with(dataVars, {FATALITIES + INJURIES})
dataFinal <- dataVars[ ,c("EVTYPE","FATALITIES","INJURIES")]
dataFinal$FATALITIES.INJURIES <- with(dataVars, {FATALITIES + INJURIES})
View(dataFinal)
dataFinal$CROP.DAMAGES <- with(dataVars, {CROPDMG * CROPDMGEXP})
dataFinal$PROP.DAMAGES <- with(dataVars, {PROPDMG * PROPDMGEXP})
dataFinal$DAMAGES <- with(dataVars, {PROPDMG * PROPDMGEXP + CROPDMG * CROPDMGEXP})
total <- tapply(dataFinal$CROP.DAMAGES, dataFinal$EVTYPE, sum)
total
total = sort(total, decreasing = TRUE)
total
